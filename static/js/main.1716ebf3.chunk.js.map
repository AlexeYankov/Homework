{"version":3,"sources":["p2-homeworks/h1/HW1.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styleCss","userPost","userAvatar","src","tasks","avatar","alt","userMessageContainer","userName","name","userMessageText","message","userMessageTextTime","time","userMessageCorner","width","height","viewBox","fill","xmlns","filter","d","stroke","strokeWidth","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","dy","stdDeviation","in2","operator","mode","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","HW2","userTaskName","affair","userTaskPriority","priority","style","padding","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","v1","useState","affairs","setAffairs","filteredAffairs","t","filterAffairs","deleteAffair","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","inputClass","onKeyDown","onBlur","disabled","GreetingContainer","users","addUserCallback","setName","setError","alert","length","trimmedName","trim","HW3","setUsers","user","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","Header","PreJunior","Error404","PATH","Router","path","element","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1716ebf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPost\":\"HW1_userPost__2jBXg\",\"userAvatar\":\"HW1_userAvatar__1Sxxy\",\"userName\":\"HW1_userName__2pqv3\",\"userMessageContainer\":\"HW1_userMessageContainer__15GKH\",\"userMessageText\":\"HW1_userMessageText__xv2MH\",\"userMessageTextTime\":\"HW1_userMessageTextTime__2EWy-\",\"userMessageCorner\":\"HW1_userMessageCorner__3zGyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HW2\":\"Affairs_HW2__1ZUen\",\"userTaskName\":\"Affairs_userTaskName__1PgLJ\",\"userTaskPriority\":\"Affairs_userTaskPriority__1ZO1r\",\"userDeleteButton\":\"Affairs_userDeleteButton__1_J-c\",\"nonActiveFilter\":\"Affairs_nonActiveFilter__3crKt\",\"activFilter\":\"Affairs_activFilter__3xGpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Greeting_superInput__3xCRP\",\"errorInput\":\"Greeting_errorInput__2Khas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport styleCss from \"./HW1.module.css\";\nimport {TaskType} from \"./HW1\";\n\ntype messageData = {\n    tasks: TaskType\n}\n\n\n\nfunction Message(props: messageData) {\n    return (\n        <div>\n            <div className={styleCss.userPost}>\n                <div className={styleCss.userAvatar}>\n                    <img src={props.tasks.avatar} alt=\"avatar must be here\"/>\n                </div>\n                <div className={styleCss.userMessageContainer}>\n                    <div className={styleCss.userName}>\n                        <span>{props.tasks.name}</span>\n                    </div>\n                    <div className={styleCss.userMessageText}>\n                        <span>{props.tasks.message}</span>\n                    </div>\n                    <div className={styleCss.userMessageTextTime}>\n                        <a>{props.tasks.time}</a>\n                    </div>\n                </div>\n                <div className={styleCss.userMessageCorner}>\n                    <svg width=\"21.95\" height=\"22.0\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <g filter=\"url(#filter0_d_2_8)\">\n                            <path d=\"M4.73684 14C14.3474 14 18 4.66667 18 0V14H4Z\" fill=\"#043b04\"/>\n                            <path d=\"M18 14V0C18 9.1 15.3474 14 9.73684 14H18ZM18 14H4\" stroke=\"#043b04\"\n                                  strokeWidth=\"0.1\"/>\n                        </g>\n                        <defs>\n                            <filter id=\"filter0_d_2_8\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"\n                                    filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\n                                <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"/>\n                                <feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\n                                               values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 157 0\" result=\"hardAlpha\"/>\n                                <feOffset dy=\"4\"/>\n                                <feGaussianBlur stdDeviation=\"2\"/>\n                                <feComposite in2=\"hardAlpha\" operator=\"out\"/>\n                                <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n                                <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_2_8\"/>\n                                <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_2_8\" result=\"shape\"/>\n                            </filter>\n                        </defs>\n                    </svg>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\n\nexport type TaskType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nexport const tasks: TaskType = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: \"Artem\",\n    message: \"npm start нажимал?\",\n    time: '20:00'\n}\nconst HW1 = () => {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            <hr/>\n            <Message\n            tasks={tasks}\n            />\n            {/*<hr/>*/}\n            {/*/!*для личного творчества, могу проверить*!/*/}\n            {/*/!*<alternativemessage/>*!/*/}\n            {/*<hr/>*/}\n        </div>\n    );\n};\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport styleCss from \"./Affairs.module.css\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: string) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () =>\n        props.deleteAffairCallback(props.affair._id)\n    // need to fix\n    return (\n        <div className={styleCss.HW2}>\n            <div className={styleCss.userTaskName}>{props.affair.name}</div>\n            <div className={styleCss.userTaskPriority}>[{props.affair.priority}]</div>\n            <div style={{padding: '3px'}} ><SuperButton style={{width: '25px'}} onClick={deleteCallback} red>x</SuperButton></div>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nexport type AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    filter: FilterType\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: string) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter ('all')\n    }\n    // need to fix\n    const setHigh = () => {\n        props.setFilter ('high')\n    }\n\n    const setMiddle = () => {\n        props.setFilter ('middle')\n    }\n\n    const setLow = () => {\n        props.setFilter ('low')\n    }\n    return (\n        <div>\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport {v1} from \"uuid\";\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\nexport type AffairType = {\n    _id: string\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: v1(), name: 'React', priority: 'high'},\n    {_id: v1(), name: 'anime', priority: 'low'},\n    {_id: v1(), name: 'games', priority: 'low'},\n    {_id: v1(), name: 'work', priority: 'high'},\n    {_id: v1(), name: 'html & css', priority: 'middle'}\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(t => t.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: string): AffairType[] => { // need to fix any\n    return affairs.filter(t => t._id !== _id) // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: string) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            <Affairs\n                data={filteredAffairs}\n                filter={filter}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n\n            />\n            {/*<hr/>*/}\n            {/*/!*для личного творчества, могу проверить*!/*/}\n            {/*/!*<AlternativeAffairs/>*!/*/}\n            {/*<hr/>*/}\n        </div>\n    )\n}\n\nexport default HW2\n","// noinspection LanguageDetectionInspection\n\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\n// noinspection LanguageDetectionInspection\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${error ? s.superInput : ''}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.superInput : s.errorInput // need to fix with (?:)\n    return (\n        <div>\n            <div>\n                <SuperInputText\n                    value={name}\n                    onChange={setNameCallback}\n                    className={inputClass}\n                    onKeyDown={onEnter}\n                    onBlur={setNameCallback}\n                />\n            </div>\n            {error && <div>{error}</div>}\n            <SuperButton onClick={addUser} disabled={!name}>add</SuperButton>\n\n            <div>{totalUsers}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void// need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const trimmedName = e.currentTarget.value.trim()         // need to fix any\n        if (trimmedName) {\n            setName(trimmedName)\n            setError('')\n        } else {\n            setName('')\n            setError('Title is required')\n        }\n\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`)\n        setName('')\n    }\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name,\n        }// need to fix any\n        setUsers([...users, user])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            {/*<hr/>*/}\n            {/*/!*для личного творчества, могу проверить*!/*/}\n            {/*/!*<AlternativeGreeting/>*!/*/}\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n        // props.onChangeChecked(e.currentTarget.checked === false ? setChecked(true): setChecked(false))\n\n    }\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'Please, enter some text'\n    const showAlert = () => {\n        if (error) {\n            alert('text is not entered')\n\n        } else {\n            alert(text)\n            setText('')// если нет ошибки показать текст\n        }\n    }\n    let [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n\n    }\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n\n                />\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            {/*// add NavLinks*/}\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {Navigate,\n    Route,\n    Routes,\n}   from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Router () {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Routes>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/ffdf'} element={() => <Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} element={() => <PreJunior/>}/>\n                {/*// add routes*/}\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route element={() => <Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Router\n","import React from 'react'\nimport Header from './Header'\nimport Router from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            <Header/>\n\n            <Router/>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react';\nimport s from './App.module.css';\nimport HW1 from '../../../p2-homeworks/h1/HW1';\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport {NavLink, Route, Routes} from \"react-router-dom\";\n\nfunction App () {\n    return (\n        <div className={s.App}>\n            <NavLink to={'/'}>main</NavLink>---\n            <NavLink to={'/login'}>login</NavLink>---\n            <NavLink to={'/profile'}>profile</NavLink>---\n            <img src=\"SpacePhoto.jpg\" alt={\"\"}/>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n            <Routes>\n                <Route path={'/'} element={<div>main</div>}/>\n                <Route path={'/login'} element={<div>login</div>}/>\n                <Route path={'/profile'} element={<div>profile</div>}/>\n            </Routes>\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}