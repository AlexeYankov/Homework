{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h1/HW1.module.css","p2-homeworks/h10/bll/loading.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/CSS/Error.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/angles-right-solid.svg","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Sneak/src/Board/Board.jsx","p2-homeworks/h5/pages/Sneak/src/lib/utils.js","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/HW10.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Pages.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Header","LinkedListNode","value","this","next","LinkedList","node","head","tail","Direction","getStartingSnakeLLValue","board","rowSize","length","colSize","startingRow","Math","round","startingCol","row","col","cell","createBoard","BOARD_SIZE","counter","currentRow","push","getCoordsInDirection","coords","direction","isOutOfBounds","getDirectionFromKey","key","getNextNodeDirection","currentDirection","currentCol","nextRow","nextCol","getGrowthNodeCoords","snakeTail","tailNextNodeDirection","growthDirection","getOppositeDirection","currentTailCoords","getCellClassName","cellValue","foodCell","foodShouldReverseDirection","snakeCells","className","has","Board","props","useState","score","setScore","snake","setSnake","Set","setSnakeCells","setFoodCell","setDirection","setFoodShouldReverseDirection","window","addEventListener","e","handleKeydown","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","moveSnake","time","newDirection","size","currentHeadCoords","nextHeadCoords","handleGameOver","nextHeadCell","newHead","currentHead","newSnakeCells","delete","add","growSnake","reverseSnake","handleFoodConsumption","growthNodeCoords","newTailCell","newTail","currentTail","previousNode","currentNode","nextNode","reverseLinkedList","snakeHead","nextFoodCell","min","max","floor","random","nextFoodShouldReverseDirection","snakeLLStartingValue","map","rowIdx","cellIdx","SuperButton","red","restProps","finalClassName","s","default","Error404","setTime","Error","onClick","Message","style","paddingTop","styleCss","userPost","userAvatar","src","tasks","avatar","alt","userMessageContainer","userName","name","userMessageText","message","userMessageTextTime","userMessageCorner","width","height","viewBox","fill","xmlns","filter","d","stroke","strokeWidth","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","dy","stdDeviation","in2","operator","mode","HW1","Affair","HW2","userTaskName","affair","userTaskPriority","priority","marginRight","deleteAffairCallback","_id","Affairs","setStyle","mappedAffairs","data","a","styleCheckerLow","r","activeFilter","nonActiveFilter","styleCheckerMiddle","styleCheckerHigh","styleCheckerAll","HW8ButtonContainer","setFilter","defaultAffairs","v1","affairs","setAffairs","filteredAffairs","t","filterAffairs","deleteAffair","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","errorMessage","finalSpanClassName","finalInputClassName","superInput","errorInput","currentTarget","Greeting","setNameCallback","addUser","totalUsers","inputClass","onKeyDown","onBlur","disabled","GreetingContainer","users","addUserCallback","setName","setError","alert","trimmedName","trim","HW3","setUsers","user","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","PreJunior","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","HW6","setValue","undefined","HW8ButtonStyle","defaultState","getItem","parse","restoreState","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","homeWorkReducer","action","payload","initialPeople","sort","b","age","HW8","styleState","useReducer","people","dispatchPeople","finalPeople","p","HW8Board","HW8Name","HW8Age","styleCheckerSortUp","styleCheckerSortDown","styleCheckerSortAge","HW8NameStyle","sortUpAC","sortDownAC","checkAgeAC","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","HW9","HW9Other","onMouseEnter","setTimeout","onMouseLeave","HW9Buttons","Date","HW10","loading","useSelector","dispatch","useDispatch","center","ring","span1","buttons","Junior","JuniorPlus","PATH","Pages","path","element","HW5","App","navigation","setNavigation","navigationStyle","routsBarActive","routs","menuBarText","menuBarTextActive","routsBarTop","htmlFor","menuButtonLabel","display","BurgerLogo","imgScale","to","isActive","routsTitleActiveNavBar","routsTitle","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.96825abc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\",\"activeFilter\":\"SuperButton_activeFilter__36Mdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPost\":\"HW1_userPost__2jBXg\",\"userAvatar\":\"HW1_userAvatar__1Sxxy\",\"userName\":\"HW1_userName__2pqv3\",\"userMessageContainer\":\"HW1_userMessageContainer__15GKH\",\"userMessageText\":\"HW1_userMessageText__xv2MH\",\"userMessageTextTime\":\"HW1_userMessageTextTime__2EWy-\",\"userMessageCorner\":\"HW1_userMessageCorner__3zGyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"loading_center__3Ysfe\",\"ring\":\"loading_ring__3PUFL\",\"span1\":\"loading_span1__1ppRV\",\"text\":\"loading_text__L9Jv1\",\"buttons\":\"loading_buttons__2nzNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HW2\":\"Affairs_HW2__1ZUen\",\"userTaskName\":\"Affairs_userTaskName__1PgLJ\",\"userTaskPriority\":\"Affairs_userTaskPriority__1ZO1r\",\"userDeleteButton\":\"Affairs_userDeleteButton__1_J-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\",\"s\":\"App_s__14LX5\",\"homeWorks\":\"App_homeWorks__1qMPz\",\"routs\":\"App_routs__1so5d\",\"routsBarTop\":\"App_routsBarTop__1UYFN\",\"routsTitle\":\"App_routsTitle__3XYd1\",\"HW8\":\"App_HW8__2eGT_\",\"HW8Name\":\"App_HW8Name__3qYE7\",\"HW8Age\":\"App_HW8Age__2FBt7\",\"HW8NameStyle\":\"App_HW8NameStyle__tNShN\",\"HW8ButtonStyle\":\"App_HW8ButtonStyle__1roE5\",\"HW8ButtonContainer\":\"App_HW8ButtonContainer__2sU_P\",\"HW8Red\":\"App_HW8Red__OzB0d\",\"routsBar\":\"App_routsBar__1GRj7\",\"routsBarActive\":\"App_routsBarActive__jQ9wq\",\"routsTitleActiveNavBar\":\"App_routsTitleActiveNavBar__3PqPi\",\"imgScale\":\"App_imgScale__3Wn2I\",\"menuButtonLabel\":\"App_menuButtonLabel__2h7sW\",\"menuBarText\":\"App_menuBarText__1GIqF\",\"menuBarTextActive\":\"App_menuBarTextActive__qeOJw\",\"HW9\":\"App_HW9__3fGzI\",\"HW9Buttons\":\"App_HW9Buttons__1dKxg\",\"HW9Other\":\"App_HW9Other__2uYfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"s\":\"Error_s__3fuiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Greeting_superInput__3xCRP\",\"errorInput\":\"Greeting_errorInput__2Khas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","module.exports = __webpack_public_path__ + \"static/media/angles-right-solid.1d136811.svg\";","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            {/*// add NavLinks*/}\n\n        </div>\n    )\n}\n\nexport default Header\n","import React, {useEffect, useState} from 'react';\nimport {\n  randomIntFromInterval,\n  reverseLinkedList,\n  useInterval,\n} from '../lib/utils.js';\n\nimport './Board.css';\n\n/**\n * TODO: add a more elegant UX for before a game starts and after a game ends.\n * A game probably shouldn't start until the user presses an arrow key, and\n * once a game is over, the board state should likely freeze until the user\n * intentionally restarts the game.\n */\n\n\nclass LinkedListNode {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nclass LinkedList {\n  constructor(value) {\n    const node = new LinkedListNode(value);\n    this.head = node;\n    this.tail = node;\n  }\n}\n\nconst Direction = {\n  UP: 'UP',\n  RIGHT: 'RIGHT',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n};\n\nconst BOARD_SIZE = 15;\nconst PROBABILITY_OF_DIRECTION_REVERSAL_FOOD = 0.3;\n\nconst getStartingSnakeLLValue = board => {\n  const rowSize = board.length;\n  const colSize = board[0].length;\n  const startingRow = Math.round(rowSize / 3);\n  const startingCol = Math.round(colSize / 3);\n  const startingCell = board[startingRow][startingCol];\n  return {\n    row: startingRow,\n    col: startingCol,\n    cell: startingCell,\n  };\n};\n\nconst Board = (props) => {\n  const [score, setScore] = useState(0);\n  const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n  const [snake, setSnake] = useState(\n    new LinkedList(getStartingSnakeLLValue(board)),\n  );\n  const [snakeCells, setSnakeCells] = useState(\n    new Set([snake.head.value.cell]),\n  );\n  // Naively set the starting food cell 5 cells away from the starting snake cell.\n  const [foodCell, setFoodCell] = useState(snake.head.value.cell + 5);\n  const [direction, setDirection] = useState(Direction.RIGHT);\n  const [foodShouldReverseDirection, setFoodShouldReverseDirection] = useState(\n    false,\n  );\n\n  // useEffect(() => {\n    window.addEventListener('keydown', e => {\n      handleKeydown(e);\n    });\n  // }, []);\n\n  const returns = () => {\n    return props.time\n  }\n\n  let a = +returns()\n  // `useInterval` is needed; you can't naively do `setInterval` in the\n  // `useEffect` above. See the article linked above the `useInterval`\n  // definition for details.\n  useInterval(() => {\n    moveSnake();\n  }, a);\n\n\n  const handleKeydown = e => {\n    const newDirection = getDirectionFromKey(e.key);\n    const isValidDirection = newDirection !== '';\n    if (!isValidDirection) return;\n    const snakeWillRunIntoItself =\n      getOppositeDirection(newDirection) === direction && snakeCells.size > 1;\n    // Note: this functionality is currently broken, for the same reason that\n    // `useInterval` is needed. Specifically, the `direction` and `snakeCells`\n    // will currently never reflect their \"latest version\" when `handleKeydown`\n    // is called. I leave it as an exercise to the viewer to fix this :P\n    if (snakeWillRunIntoItself) return;\n    setDirection(newDirection);\n  };\n\n  const moveSnake = () => {\n    const currentHeadCoords = {\n      row: snake.head.value.row,\n      col: snake.head.value.col,\n    };\n\n    const nextHeadCoords = getCoordsInDirection(currentHeadCoords, direction);\n    if (isOutOfBounds(nextHeadCoords, board)) {\n      handleGameOver();\n      return;\n    }\n    const nextHeadCell = board[nextHeadCoords.row][nextHeadCoords.col];\n    if (snakeCells.has(nextHeadCell)) {\n      handleGameOver();\n      return;\n    }\n\n    const newHead = new LinkedListNode({\n      row: nextHeadCoords.row,\n      col: nextHeadCoords.col,\n      cell: nextHeadCell,\n    });\n    const currentHead = snake.head;\n    snake.head = newHead;\n    currentHead.next = newHead;\n\n    const newSnakeCells = new Set(snakeCells);\n    newSnakeCells.delete(snake.tail.value.cell);\n    newSnakeCells.add(nextHeadCell);\n\n    snake.tail = snake.tail.next;\n    if (snake.tail === null) snake.tail = snake.head;\n\n    const foodConsumed = nextHeadCell === foodCell;\n    if (foodConsumed) {\n      // This function mutates newSnakeCells.\n      growSnake(newSnakeCells);\n      if (foodShouldReverseDirection) reverseSnake();\n      handleFoodConsumption(newSnakeCells);\n    }\n\n    setSnakeCells(newSnakeCells);\n  };\n\n  // This function mutates newSnakeCells.\n  const growSnake = newSnakeCells => {\n    const growthNodeCoords = getGrowthNodeCoords(snake.tail, direction);\n    if (isOutOfBounds(growthNodeCoords, board)) {\n      // Snake is positioned such that it can't grow; don't do anything.\n      return;\n    }\n    const newTailCell = board[growthNodeCoords.row][growthNodeCoords.col];\n    const newTail = new LinkedListNode({\n      row: growthNodeCoords.row,\n      col: growthNodeCoords.col,\n      cell: newTailCell,\n    });\n    const currentTail = snake.tail;\n    snake.tail = newTail;\n    snake.tail.next = currentTail;\n\n    newSnakeCells.add(newTailCell);\n  };\n\n  const reverseSnake = () => {\n    const tailNextNodeDirection = getNextNodeDirection(snake.tail, direction);\n    const newDirection = getOppositeDirection(tailNextNodeDirection);\n    setDirection(newDirection);\n\n    // The tail of the snake is really the head of the linked list, which\n    // is why we have to pass the snake's tail to `reverseLinkedList`.\n    reverseLinkedList(snake.tail);\n    const snakeHead = snake.head;\n    snake.head = snake.tail;\n    snake.tail = snakeHead;\n  };\n\n  const handleFoodConsumption = newSnakeCells => {\n    const maxPossibleCellValue = BOARD_SIZE * BOARD_SIZE;\n    let nextFoodCell;\n    // In practice, this will never be a time-consuming operation. Even\n    // in the extreme scenario where a snake is so big that it takes up 90%\n    // of the board (nearly impossible), there would be a 10% chance of generating\n    // a valid new food cell--so an average of 10 operations: trivial.\n    while (true) {\n      nextFoodCell = randomIntFromInterval(1, maxPossibleCellValue);\n      if (newSnakeCells.has(nextFoodCell) || foodCell === nextFoodCell)\n        continue;\n      break;\n    }\n\n    const nextFoodShouldReverseDirection =\n      Math.random() < PROBABILITY_OF_DIRECTION_REVERSAL_FOOD;\n\n    setFoodCell(nextFoodCell);\n    setFoodShouldReverseDirection(nextFoodShouldReverseDirection);\n    setScore(score + 1);\n  };\n\n  const handleGameOver = () => {\n    setScore(0);\n    const snakeLLStartingValue = getStartingSnakeLLValue(board);\n    setSnake(new LinkedList(snakeLLStartingValue));\n    setFoodCell(snakeLLStartingValue.cell + 5);\n    setSnakeCells(new Set([snakeLLStartingValue.cell]));\n    setDirection(Direction.RIGHT);\n  };\n\n  return (\n    <>\n      <h1>Score: {score}</h1>\n      <div className=\"board\">\n        {board.map((row, rowIdx) => (\n          <div key={rowIdx} className=\"row\">\n            {row.map((cellValue, cellIdx) => {\n              const className = getCellClassName(\n                cellValue,\n                foodCell,\n                foodShouldReverseDirection,\n                snakeCells,\n              );\n              return <div key={cellIdx} className={className}></div>;\n            })}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst createBoard = BOARD_SIZE => {\n  let counter = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      currentRow.push(counter++);\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\n\nconst getCoordsInDirection = (coords, direction) => {\n  if (direction === Direction.UP) {\n    return {\n      row: coords.row - 1,\n      col: coords.col,\n    };\n  }\n  if (direction === Direction.RIGHT) {\n    return {\n      row: coords.row,\n      col: coords.col + 1,\n    };\n  }\n  if (direction === Direction.DOWN) {\n    return {\n      row: coords.row + 1,\n      col: coords.col,\n    };\n  }\n  if (direction === Direction.LEFT) {\n    return {\n      row: coords.row,\n      col: coords.col - 1,\n    };\n  }\n};\n\nconst isOutOfBounds = (coords, board) => {\n  const {row, col} = coords;\n  if (row < 0 || col < 0) return true;\n  if (row >= board.length || col >= board[0].length) return true;\n  return false;\n};\n\nconst getDirectionFromKey = key => {\n  if (key === 'ArrowUp') return Direction.UP;\n  if (key === 'ArrowRight') return Direction.RIGHT;\n  if (key === 'ArrowDown') return Direction.DOWN;\n  if (key === 'ArrowLeft') return Direction.LEFT;\n  return '';\n};\n\nconst getNextNodeDirection = (node, currentDirection) => {\n  if (node.next === null) return currentDirection;\n  const {row: currentRow, col: currentCol} = node.value;\n  const {row: nextRow, col: nextCol} = node.next.value;\n  if (nextRow === currentRow && nextCol === currentCol + 1) {\n    return Direction.RIGHT;\n  }\n  if (nextRow === currentRow && nextCol === currentCol - 1) {\n    return Direction.LEFT;\n  }\n  if (nextCol === currentCol && nextRow === currentRow + 1) {\n    return Direction.DOWN;\n  }\n  if (nextCol === currentCol && nextRow === currentRow - 1) {\n    return Direction.UP;\n  }\n  return '';\n};\n\nconst getGrowthNodeCoords = (snakeTail, currentDirection) => {\n  const tailNextNodeDirection = getNextNodeDirection(\n    snakeTail,\n    currentDirection,\n  );\n  const growthDirection = getOppositeDirection(tailNextNodeDirection);\n  const currentTailCoords = {\n    row: snakeTail.value.row,\n    col: snakeTail.value.col,\n  };\n  const growthNodeCoords = getCoordsInDirection(\n    currentTailCoords,\n    growthDirection,\n  );\n  return growthNodeCoords;\n};\n\nconst getOppositeDirection = direction => {\n  if (direction === Direction.UP) return Direction.DOWN;\n  if (direction === Direction.RIGHT) return Direction.LEFT;\n  if (direction === Direction.DOWN) return Direction.UP;\n  if (direction === Direction.LEFT) return Direction.RIGHT;\n};\n\nconst getCellClassName = (\n  cellValue,\n  foodCell,\n  foodShouldReverseDirection,\n  snakeCells,\n) => {\n  let className = 'cell';\n  if (cellValue === foodCell) {\n    if (foodShouldReverseDirection) {\n      className = 'cell cell-purple';\n    } else {\n      className = 'cell cell-red';\n    }\n  }\n  if (snakeCells.has(cellValue)) className = 'cell cell-green';\n\n  return className;\n};\n\nexport default Board;\n","import {useEffect, useRef} from 'react';\n\n// Copied from https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nexport function randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// Copied from https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport function reverseLinkedList(head) {\n  let previousNode = null;\n  let currentNode = head;\n  while (currentNode !== null) {\n    const nextNode = currentNode.next;\n    currentNode.next = previousNode;\n    previousNode = currentNode;\n    currentNode = nextNode;\n  }\n  return previousNode;\n}\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n    className?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {useState} from 'react'\nimport Board from \"./Sneak/src/Board/Board\";\nimport s from \"./CSS/Error.module.css\";\nimport SuperButton from \"../../h4/common/c2-SuperButton/SuperButton\";\n\n\nfunction Error404() {\n    const [time, setTime] = useState<number>(99999)\n    const timeCheck = 150\n    const sneakStart = () => {\n        if (time===timeCheck) {\n            setTime(999999)\n        }\n        else {\n            setTime(timeCheck)\n        }\n    }\n\n    return (\n        <div className={s.Error}>\n            <span><SuperButton className={s.Error} onClick={sneakStart}>Click to START/STOP</SuperButton></span>\n            <Board time={time}/>\n\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport styleCss from \"./HW1.module.css\";\nimport {TaskType} from \"./HW1\";\n\ntype messageData = {\n    tasks: TaskType\n}\n\n\n\nfunction Message(props: messageData) {\n    return (\n        <div style={{paddingTop: '10px'}}>\n            <div className={styleCss.userPost}>\n                <div className={styleCss.userAvatar}>\n                    <img src={props.tasks.avatar} alt=\"avatar must be here\"/>\n                </div>\n                <div className={styleCss.userMessageContainer}>\n                    <div className={styleCss.userName}>\n                        <span>{props.tasks.name}</span>\n                    </div>\n                    <div className={styleCss.userMessageText}>\n                        <span>{props.tasks.message}</span>\n                    </div>\n                    <div className={styleCss.userMessageTextTime}>\n                        <a>{props.tasks.time}</a>\n                    </div>\n                </div>\n                <div className={styleCss.userMessageCorner}>\n                    <svg width=\"21.95\" height=\"22.0\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <g filter=\"url(#filter0_d_2_8)\">\n                            <path d=\"M4.73684 14C14.3474 14 18 4.66667 18 0V14H4Z\" fill=\"#043b04\"/>\n                            <path d=\"M18 14V0C18 9.1 15.3474 14 9.73684 14H18ZM18 14H4\" stroke=\"#043b04\"\n                                  strokeWidth=\"0.1\"/>\n                        </g>\n                        <defs>\n                            <filter id=\"filter0_d_2_8\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"\n                                    filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\n                                <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"/>\n                                <feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\n                                               values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 157 0\" result=\"hardAlpha\"/>\n                                <feOffset dy=\"4\"/>\n                                <feGaussianBlur stdDeviation=\"2\"/>\n                                <feComposite in2=\"hardAlpha\" operator=\"out\"/>\n                                <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n                                <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_2_8\"/>\n                                <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_2_8\" result=\"shape\"/>\n                            </filter>\n                        </defs>\n                    </svg>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\n\nexport type TaskType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nexport const tasks: TaskType = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: \"Artem\",\n    message: \"npm start нажимал?\",\n    time: '20:00'\n}\nconst HW1 = () => {\n    return (\n        <div>\n            <hr/>\n            homework 1\n            <Message\n            tasks={tasks}\n            />\n            {/*<hr/>*/}\n            {/*/!*для личного творчества, могу проверить*!/*/}\n            {/*/!*<alternativemessage/>*!/*/}\n            {/*<hr/>*/}\n        </div>\n    );\n};\nexport default HW1;\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport styleCss from \"./Affairs.module.css\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: string) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () =>\n        props.deleteAffairCallback(props.affair._id)\n    // need to fix\n    return (\n        <div className={styleCss.HW2}>\n            <div className={styleCss.userTaskName}>{props.affair.name}</div>\n            <div className={styleCss.userTaskPriority}>{props.affair.priority}</div>\n            <div style={{marginRight: '5px'}} ><SuperButton onClick={deleteCallback} red>x</SuperButton></div>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {useState} from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport r from \"../h4/common/c2-SuperButton/SuperButton.module.css\";\nimport s from \"../../p1-main/m1-ui/u1-app/App.module.css\";\n\nexport type AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    filter: FilterType\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: string) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const [style, setStyle] = useState('')\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n        setStyle('active all')\n    }\n    // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n        setStyle('active high')\n    }\n\n    const setMiddle = () => {\n        props.setFilter('middle')\n        setStyle('active middle')\n    }\n\n    const setLow = () => {\n        props.setFilter('low')\n        setStyle('active low')\n    }\n\n    const styleCheckerLow = style === 'active low' ? r.activeFilter : s.nonActiveFilter\n    const styleCheckerMiddle = style === 'active middle' ? r.activeFilter : s.nonActiveFilter\n    const styleCheckerHigh = style === 'active high' ? r.activeFilter : s.nonActiveFilter\n    const styleCheckerAll = style === 'active all' ? r.activeFilter : s.nonActiveFilter\n\n    return (\n        <div style={{paddingTop: '10px'}}>\n            {mappedAffairs}\n            <div className={s.HW8ButtonContainer}>\n                <SuperButton className={styleCheckerAll} onClick={setAll}>All</SuperButton>\n                <SuperButton className={styleCheckerHigh} onClick={setHigh}>High</SuperButton>\n                <SuperButton className={styleCheckerMiddle} onClick={setMiddle}>Middle</SuperButton>\n                <SuperButton className={styleCheckerLow} onClick={setLow}>Low</SuperButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport {v1} from \"uuid\";\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\nexport type AffairType = {\n    _id: string\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: v1(), name: 'React', priority: 'high'},\n    {_id: v1(), name: 'anime', priority: 'low'},\n    {_id: v1(), name: 'games', priority: 'low'},\n    {_id: v1(), name: 'work', priority: 'high'},\n    {_id: v1(), name: 'html & css', priority: 'middle'}\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(t => t.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: string): AffairType[] => { // need to fix any\n    return affairs.filter(t => t._id !== _id) // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: string) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homework 2\n            <Affairs\n                data={filteredAffairs}\n                filter={filter}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n\n            />\n            {/*<hr/>*/}\n            {/*/!*для личного творчества, могу проверить*!/*/}\n            {/*/!*<AlternativeAffairs/>*!/*/}\n            {/*<hr/>*/}\n        </div>\n    )\n}\n\nexport default HW2\n","// noinspection LanguageDetectionInspection\n\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\n// noinspection LanguageDetectionInspection\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: boolean\n    spanClassName?: string\n    className?: string\n    errorMessage?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        errorMessage,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    // const finalInputClassName = error ?  // need to fix with (?:) and s.superInput\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{errorMessage}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: boolean // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const errorMessage = \"Input cant be empty!\"\n    const inputClass = error ? s.errorInput : s.superInput // need to fix with (?:)\n    return (\n        <div style={{paddingTop: '10px'}}>\n            <span>\n                <SuperInputText\n                    value={name}\n                    onChange={setNameCallback}\n                    className={inputClass}\n                    onKeyDown={onEnter}\n                    onBlur={setNameCallback}\n                    error={error}\n                />\n            </span>\n\n            {error && <div>{errorMessage}</div>}\n            <div>\n           <span><SuperButton onClick={addUser} disabled={!name}>add</SuperButton></span><span>  Users: {totalUsers}</span>\n            </div>\n\n\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void// need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<boolean>(false) // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const trimmedName = e.currentTarget.value.trim()         // need to fix any\n        if (trimmedName) {\n            setName(trimmedName)\n            setError(false)\n            // setError(false)\n        } else {\n            setError(true)\n            setName('')\n\n        }\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`)\n        setName('')\n    }\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name,\n        }// need to fix any\n        setUsers([...users, user])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homework 3\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            {/*<hr/>*/}\n            {/*/!*для личного творчества, могу проверить*!/*/}\n            {/*/!*<AlternativeGreeting/>*!/*/}\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n        // props.onChangeChecked(e.currentTarget.checked === false ? setChecked(true): setChecked(false))\n\n    }\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const errorMessage = text ? '' : 'error'\n    let error = false\n    if (text === '') {\n        error = true\n    }\n    else {\n        error = false\n    }\n    const showAlert = () => {\n        if (error) {\n            alert('Please, enter some text')\n\n        } else {\n            alert(text)// если нет ошибки показать текст\n        }\n    }\n\n\n    let [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setChecked(e.currentTarget.checked)\n    }\n\n\n\n    return (\n        <div>\n            <hr/>\n            <div>homework 4</div>\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                    errorMessage={errorMessage}\n\n                />\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: boolean\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\n// const state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport EditIcon from '@mui/icons-material/Edit';\nimport s from \"../../p1-main/m1-ui/u1-app/App.module.css\";\n\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState('editable-span-value', value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homework 6\n\n            <div className={''}>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'Please, enter some text...'}}\n                />\n                <EditIcon/>\n            </div>\n            <div className={s.HW8ButtonContainer}>\n            <span className={s.HW8ButtonStyle}><SuperButton onClick={save} >save</SuperButton></span>\n                <span className={s.HW8ButtonStyle}><SuperButton onClick={restore} >restore</SuperButton></span>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <option key={o + '-' + i} value={o}>{o}</option> ))\n    : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                name={name}\n                checked={o===value}\n                value={o}\n                onChange={onChangeCallback}\n                {...restProps}/>\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            homework 7\n\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import {UserDataType} from \"../HW8\"\n\nexport const homeWorkReducer = (state: UserDataType[], action: ReduceSortCheckType): UserDataType[]=> { // need to fix any\n    switch (action.type) {\n        case 'sort': {\n            if (action.payload.type === 'up') {\n                return action.payload.initialPeople.sort((a, b)=>a.name>b.name ? 1 : -1)\n            }\n            if (action.payload.type === 'down') {\n                return action.payload.initialPeople.sort((a, b)=>a.name>b.name ? -1 : 1)\n            }\n        }\n        case 'check': {\n            return action.payload.initialPeople.filter(o=>o.age >= action.payload.type)\n        }\n        default: return state\n\n    }\n}\n\nexport type ReduceSortCheckType = SortUpACType | SortDownACType | CheckAgeACType\n\ntype  SortUpACType = ReturnType<typeof sortUpAC>\nexport const sortUpAC = (initialPeople: UserDataType[]) => {\n    return {\n        type: 'sort',\n        payload: {\n            type: 'up',\n            initialPeople\n        }\n    } as const\n}\ntype  SortDownACType = ReturnType<typeof sortDownAC>\nexport const sortDownAC = (initialPeople: UserDataType[]) => {\n    return {\n        type: 'sort',\n        payload: {\n            type: 'down',\n            initialPeople\n        }\n    } as const\n}\ntype  CheckAgeACType = ReturnType<typeof checkAgeAC>\nexport const checkAgeAC = (initialPeople: UserDataType[]) => {\n    return {\n        type: 'check',\n        payload: {\n            type: 18,\n            initialPeople\n        }\n    } as const\n}\n\n\n\n","import React, {useReducer, useState} from 'react'\nimport s from '../../p1-main/m1-ui/u1-app/App.module.css'\nimport {checkAgeAC, homeWorkReducer, sortDownAC, sortUpAC} from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport r from '../h4/common/c2-SuperButton/SuperButton.module.css'\n\nexport type UserDataType = {\n    _id: number,\n    name: string,\n    age: number\n}\n\nconst initialPeople = [\n    {_id: 0, name: 'Кот', age: 3},\n    {_id: 1, name: 'Александр', age: 66},\n    {_id: 2, name: 'Коля', age: 16},\n    {_id: 3, name: 'Виктор', age: 44},\n    {_id: 4, name: 'Дмитрий', age: 40},\n    {_id: 5, name: 'Ирина', age: 55},\n]\n\nfunction HW8() {\n    const [styleState, setStyle] = useState('')\n    const [people, dispatchPeople] = useReducer(homeWorkReducer, initialPeople) // need to fix any\n    const finalPeople = people.map((p: UserDataType) => (\n        <div className={s.HW8Board} key={p._id}>\n            <span className={s.HW8Name}>{p.name}</span>\n            <span className={s.HW8Age}>{p.age}</span>\n        </div>\n    ))\n\n    const sortUp = () => {\n        dispatchPeople(sortUpAC(initialPeople))\n        setStyle('sort Up')\n    }\n    const sortDown = () => {\n        dispatchPeople(sortDownAC(initialPeople))\n        setStyle('sort Down')\n    }\n    const checkOnAge = () => {\n        dispatchPeople(checkAgeAC(initialPeople))\n        setStyle('sort Age')\n    }\n\n    const styleCheckerSortUp = styleState === 'sort Up' ? r.activeFilter : ''\n    const styleCheckerSortDown = styleState === 'sort Down' ? r.activeFilter : ''\n    const styleCheckerSortAge = styleState === 'sort Age' ? r.activeFilter : ''\n\n    return (\n        <div>\n            homework 8\n\n            {/*should work (должно работать)*/}\n            <div className={s.HW8}>\n                <div className={s.HW8Name}>\n                    <span className={s.HW8NameStyle}>Name</span>\n                </div>\n                <div className={s.HW8Age}>\n                    <span className={s.HW8NameStyle}>Age</span>\n                </div>\n\n                {finalPeople}\n            </div>\n            <div className={s.HW8ButtonContainer}>\n            <SuperButton className={styleCheckerSortUp} onClick={sortUp}>sort Up</SuperButton>\n            <SuperButton className={styleCheckerSortDown} onClick={sortDown}>sort Down</SuperButton>\n            <SuperButton className={styleCheckerSortAge} onClick={checkOnAge}>Check Age more 18</SuperButton>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n\n\nexport default HW8\n","import React, {useState} from 'react'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport s from '../../p1-main/m1-ui/u1-app/App.module.css'\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number>(0)\n    const [date, setDate] = useState<Date>()\n    const [show, setShow] = useState<boolean>(false)\n    const stop = () => {\n        clearInterval(timerId)\n    }\n    const start = () => {\n        stop()\n        const id: number = window.setInterval(() => {\n            setDate(new Date())\n        }, 1000)\n        setTimerId(id)\n    }\n\n    const onMouseEnter = () => {\n        // show\n        // const b = () => setShow(false)\n        const a = () => setShow(true)\n        setTimeout(a,1000)\n    }\n    const onMouseLeave = () => {\n        // close\n        const b = () =>  setShow(false)\n        // const a = () => setShow(true)\n        setTimeout(b,3000)\n    }\n    // const re = /'.'/gi;\n    const stringTime = date?.toLocaleTimeString() // fix with date\n    const stringDate = date?.toLocaleDateString() // fix with date\n\n    return (\n        <div className={s.HW9}>\n            <div className={s.HW9Other}>\n                <div\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                >\n                    {stringTime}\n                </div>\n\n                {show && (\n                    <div>\n                        {stringDate}\n                    </div>\n                )}\n            </div>\n            <div className={s.HW9Buttons}>\n                <SuperButton onClick={start}>start</SuperButton>\n                <SuperButton onClick={stop}>stop</SuperButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Clock\n","import React from 'react'\nimport Clock from './Clock'\n\nfunction HW9() {\n    return (\n        <div>\n            homework 9\n\n            {/*should work (должно работать)*/}\n            <Clock/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeClock/>*/}\n        </div>\n    )\n}\n\nexport default HW9\n","import React from 'react'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"./bll/store\";\nimport {loadingAC} from \"./bll/loadingReducer\";\nimport s from \"./bll/loading.module.css\"\n\nfunction HW10() {\n    const loading = useSelector<AppStoreType, boolean>(state => state.loading)\n\n\n    const dispatch = useDispatch()\n\n    const setLoading = () => {\n        dispatch(loadingAC())\n        const b = () => dispatch(loadingAC())\n        setTimeout(b, 2000)\n    };\n    return (\n        <div>\n            homework 10\n\n            {loading\n                ? (\n                    <div>\n                        <div className={s.center}>\n                            <div className={s.ring}>\n                            </div>\n                            <span className={s.span1}>loading...</span>\n                        </div>\n                    </div>\n                ) : (\n                    <div className={s.buttons}>\n                        <SuperButton onClick={setLoading} >set loading...</SuperButton>\n                    </div>\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default HW10\n","const a = false\nconst initState = a\n\n\n\nexport const loadingReducer = (state = initState, action: reduceACType): any => { // fix any\n    switch (action.type) {\n        case 'LOADING': {\n            return (!state)\n        }\n        default: return state\n    }\n}\n\n\ntype reduceACType = loadingACType\ntype loadingACType = ReturnType<typeof loadingAC>\nexport const loadingAC = () => {\n    return {\n        type: 'LOADING',\n    } as const\n} // fix any","import React from 'react'\nimport HW6 from '../../h6/HW6'\nimport HW7 from '../../h7/HW7'\nimport HW8 from '../../h8/HW8'\nimport HW9 from \"../../h9/HW9\";\nimport HW10 from \"../../h10/HW10\";\n\nfunction Junior() {\n    return (\n        <div>\n            <HW6/>\n            <HW7/>\n            <HW8/>\n            <HW9/>\n            <HW10/>\n\n        </div>\n    )\n}\n\nexport default Junior\n","import React from 'react'\n// import HW11 from '../../h11/HW11'\n// import HW12 from '../../h12/HW12'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n\n            {/*<HW11/>*/}\n            {/*<HW12/>*/}\n\n        </div>\n    )\n}\n\nexport default JuniorPlus\n","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport {Route, Routes} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR_MAIN: '/',\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIORPLUS: '/junior-plus',\n    PATHERROR: '/*'\n    // add paths\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                <Route path={'/'} element={<PreJunior/>}/>\n                <Route path={PATH.PRE_JUNIOR_MAIN} element={<PreJunior/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n\n                <Route path={PATH.JUNIORPLUS} element={<JuniorPlus/>}/>\n\n                <Route path={'/*'} element={<Error404/>}/>\n                {/*// add routes*/}\n\n                {/*он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\n\nfunction HW5() {\n    return (\n        <div>\n\n            <Header/>\n\n            <Pages/>\n\n        </div>\n    )\n}\n\nexport default HW5\n","import React, {useState} from 'react';\nimport s from './App.module.css';\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport {NavLink, Route, Routes} from \"react-router-dom\";\nimport BurgerLogo from './angles-right-solid.svg';\n\nfunction App() {\n    const [navigation, setNavigation] = useState<string>('')\n    const navigationStyle = navigation === 'active' ? s.routsBarActive : s.routs\n    const navigationButton = () => {\n        if (navigation === 'active') {\n            setNavigation('')\n        } else {\n            setNavigation('active')\n        }\n    }\n    const menuBarText = navigation === 'active' ? s.menuBarTextActive : s.menuBarText\n\n    return (\n        <div className={s.App}>\n            <div className={s.routsBarTop}>\n                <label htmlFor=\"Foo\" className={s.menuButtonLabel}>\n                    <button style={{display: 'none'}} id={'Foo'} onClick={navigationButton}/>\n                    <img src={BurgerLogo} alt=\"#\" className={s.imgScale}/><span id={'Foo'} className={menuBarText}>Click to show all Pages</span>\n                </label>\n\n                <div className={navigationStyle}>\n                    <NavLink to={'/'} className={({isActive}) => isActive ? s.routsTitleActiveNavBar : ''}><span\n                        className={s.routsTitle}>Home</span></NavLink>\n                    <NavLink to={'/pre-junior'}\n                             className={({isActive}) => isActive ? s.routsTitleActiveNavBar : ''}><span\n                        className={s.routsTitle}>Pre-Junior</span></NavLink>\n                    <NavLink to={'/junior'} className={({isActive}) => isActive ? s.routsTitleActiveNavBar : ''}><span\n                        className={s.routsTitle}>Junior</span></NavLink>\n                    <NavLink to={'/junior-plus'}\n                             className={({isActive}) => isActive ? s.routsTitleActiveNavBar : ''}><span\n                        className={s.routsTitle}>Junior+</span></NavLink>\n                </div>\n            </div>\n\n            <HW5/>\n            <Routes>\n                <Route path={'/*'} element={''}/>\n                <Route path={'/'} element={''}/>\n                <Route path={'/pre-junior'} element={''}/>\n                <Route path={'/junior'} element={''}/>\n                <Route path={'/junior-plus'} element={''}/>\n            </Routes>\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import {loadingReducer} from './loadingReducer'\nimport {combineReducers} from \"redux\";\nimport { legacy_createStore as createStore} from 'redux'\n\nconst reducers = combineReducers({\n    loading: loadingReducer,\n\n})\n\nconst store = createStore(reducers)\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./p2-homeworks/h10/bll/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter></Provider>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\n"],"sourceRoot":""}